// <auto-generated />
using System;
using Kameyo.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kameyo.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220628032059_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Catalog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("description");

                    b.Property<bool>("IsSystemOwner")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("name");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("order");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("parent_id");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("value");

                    b.Property<string>("Value1")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("value1");

                    b.Property<string>("Value2")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("value2");

                    b.HasKey("Id");

                    b.ToTable("Catalog", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("22874dde-3ef1-4875-bc02-88c7863444f1"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8170),
                            CreatedBy = "System",
                            Description = "Tipo de identificacion ruc",
                            IsSystemOwner = true,
                            Name = "IDENTIFICATIONTYPE",
                            Order = 0,
                            Value = "Ruc"
                        },
                        new
                        {
                            Id = new Guid("9b09536a-ec98-4303-8506-b4ba43f67812"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8183),
                            CreatedBy = "System",
                            Description = "Tipo de identificacion cedula",
                            IsSystemOwner = true,
                            Name = "IDENTIFICATIONTYPE",
                            Order = 1,
                            Value = "Cedula"
                        },
                        new
                        {
                            Id = new Guid("baa8773a-9f1d-40d5-ae96-44dbf5993656"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8190),
                            CreatedBy = "System",
                            Description = "Tipo de identificacion DNI",
                            IsSystemOwner = true,
                            Name = "IDENTIFICATIONTYPE",
                            Order = 2,
                            Value = "DNI"
                        },
                        new
                        {
                            Id = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8196),
                            CreatedBy = "System",
                            Description = "Pais Ecuador",
                            IsSystemOwner = true,
                            Name = "COUNTRIES",
                            Order = 0,
                            Value = "ECUADOR"
                        },
                        new
                        {
                            Id = new Guid("d7e2a0ba-f955-4717-bf72-26c72ad4305b"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8207),
                            CreatedBy = "System",
                            Description = "Provincia MANABI",
                            IsSystemOwner = true,
                            Name = "STATES",
                            Order = 0,
                            ParentId = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            Value = "MANABI"
                        },
                        new
                        {
                            Id = new Guid("5cbdbb13-b93d-46a3-852e-9ec0a5083a83"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8217),
                            CreatedBy = "System",
                            Description = "Provincia PICHINCHA",
                            IsSystemOwner = true,
                            Name = "STATES",
                            Order = 0,
                            ParentId = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            Value = "PICHINCHA"
                        },
                        new
                        {
                            Id = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8295),
                            CreatedBy = "System",
                            Description = "Provincia GUAYAS",
                            IsSystemOwner = true,
                            Name = "STATES",
                            Order = 0,
                            ParentId = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            Value = "GUAYAS"
                        },
                        new
                        {
                            Id = new Guid("f9d2e8b0-5309-479a-a9a0-e5272002a68c"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8301),
                            CreatedBy = "System",
                            Description = "Ciudad PORTOVIEJO",
                            IsSystemOwner = true,
                            Name = "CITY",
                            Order = 0,
                            ParentId = new Guid("d7e2a0ba-f955-4717-bf72-26c72ad4305b"),
                            Value = "PORTOVIEJO"
                        },
                        new
                        {
                            Id = new Guid("2a9977da-8282-46ce-a944-9897b13ba477"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8306),
                            CreatedBy = "System",
                            Description = "Ciudad MANTA",
                            IsSystemOwner = true,
                            Name = "CITY",
                            Order = 0,
                            ParentId = new Guid("d7e2a0ba-f955-4717-bf72-26c72ad4305b"),
                            Value = "MANTA"
                        },
                        new
                        {
                            Id = new Guid("eae6dd86-2c18-4a8b-be0a-751e533c8ce9"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8314),
                            CreatedBy = "System",
                            Description = "Ciudad QUITO",
                            IsSystemOwner = true,
                            Name = "CITY",
                            Order = 0,
                            ParentId = new Guid("5cbdbb13-b93d-46a3-852e-9ec0a5083a83"),
                            Value = "QUITO"
                        },
                        new
                        {
                            Id = new Guid("fa6f37f1-7b11-44fe-be08-7004f1f2bd99"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8320),
                            CreatedBy = "System",
                            Description = "Ciudad SANGOLQUI",
                            IsSystemOwner = true,
                            Name = "CITY",
                            Order = 0,
                            ParentId = new Guid("5cbdbb13-b93d-46a3-852e-9ec0a5083a83"),
                            Value = "SANGOLQUI"
                        },
                        new
                        {
                            Id = new Guid("9e07bed6-eee4-4fd6-afc1-bcb13b0ea7cc"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8325),
                            CreatedBy = "System",
                            Description = "Ciudad GUAYAQUIL",
                            IsSystemOwner = true,
                            Name = "CITY",
                            Order = 0,
                            ParentId = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            Value = "GUAYAQUIL"
                        },
                        new
                        {
                            Id = new Guid("064cdae7-d711-4b3f-ae64-35447988825c"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8331),
                            CreatedBy = "System",
                            Description = "Ciudad DURAN",
                            IsSystemOwner = true,
                            Name = "CITY",
                            Order = 0,
                            ParentId = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            Value = "DURAN"
                        },
                        new
                        {
                            Id = new Guid("bda11fce-1441-4818-9db1-8743c0c1e8ba"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8336),
                            CreatedBy = "System",
                            Description = "Ciudad DAULE",
                            IsSystemOwner = true,
                            Name = "CITY",
                            Order = 0,
                            ParentId = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            Value = "DAULE"
                        },
                        new
                        {
                            Id = new Guid("5286a15e-2883-4165-b1df-3896319fa80d"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8347),
                            CreatedBy = "System",
                            Description = "Pais COLOMBIA",
                            IsSystemOwner = true,
                            Name = "COUNTRIES",
                            Order = 1,
                            Value = "COLOMBIA"
                        },
                        new
                        {
                            Id = new Guid("cf546c4c-bf37-46a7-b96c-a8091972cd03"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8351),
                            CreatedBy = "System",
                            Description = "Pais SAN SALVADOR",
                            IsSystemOwner = true,
                            Name = "COUNTRIES",
                            Order = 2,
                            Value = "SAN SALVADOR"
                        },
                        new
                        {
                            Id = new Guid("1bcf3c7b-2e0e-4401-aa5f-d1460363b885"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8356),
                            CreatedBy = "System",
                            Description = "Tipo de industria - COMERCIO",
                            IsSystemOwner = true,
                            Name = "INDUSTRYTYPE",
                            Order = 0,
                            Value = "COMERCIO"
                        },
                        new
                        {
                            Id = new Guid("0576c349-ce1e-4761-a4ec-7ef228f426f5"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8363),
                            CreatedBy = "System",
                            Description = "Sub Tipo de industria - CONFITERIA",
                            IsSystemOwner = true,
                            Name = "INDUSTRYSUBTYPE",
                            Order = 0,
                            Value = "CONFITERIA"
                        },
                        new
                        {
                            Id = new Guid("f124a4c3-b3e2-4e6b-96d4-26d4712be343"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8368),
                            CreatedBy = "System",
                            Description = "DOLAR",
                            IsSystemOwner = true,
                            Name = "CURRENCY",
                            Order = 0,
                            Value = "DOLAR"
                        },
                        new
                        {
                            Id = new Guid("1d49a30e-921e-4e9b-b1ca-d4bdce4cf431"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8391),
                            CreatedBy = "System",
                            Description = "Peso colombiano",
                            IsSystemOwner = true,
                            Name = "CURRENCY",
                            Order = 0,
                            Value = "PESO COLOMBIANO"
                        },
                        new
                        {
                            Id = new Guid("b7571cdb-50bb-4c0d-ae2e-f854f5fddc24"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8397),
                            CreatedBy = "System",
                            Description = "DOLAR",
                            IsSystemOwner = true,
                            Name = "AREA",
                            Order = 0,
                            Value = "AREA1"
                        },
                        new
                        {
                            Id = new Guid("e1cf4d2a-de84-4f11-a480-e4acad0a689d"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8405),
                            CreatedBy = "System",
                            Description = "DOLAR",
                            IsSystemOwner = true,
                            Name = "DEPARTMEN",
                            Order = 0,
                            Value = "DEPARTMEN1"
                        },
                        new
                        {
                            Id = new Guid("33220a02-5ae9-46b9-9f3e-664cfe140320"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8409),
                            CreatedBy = "System",
                            Description = "DOLAR",
                            IsSystemOwner = true,
                            Name = "COSTCENTER",
                            Order = 0,
                            Value = "COSTCENTER1"
                        },
                        new
                        {
                            Id = new Guid("c7d0f2c1-8039-4171-b4a2-e67defafd387"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8413),
                            CreatedBy = "System",
                            Description = "DOLAR",
                            IsSystemOwner = true,
                            Name = "POSITION",
                            Order = 0,
                            Value = "POSITION1"
                        },
                        new
                        {
                            Id = new Guid("5fadbd15-2505-44f9-b197-8c8b255cb3e6"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8417),
                            CreatedBy = "System",
                            Description = "CONSULTOR",
                            IsSystemOwner = true,
                            Name = "EMPLOYEETYPE",
                            Order = 0,
                            Value = "CONSULTOR"
                        },
                        new
                        {
                            Id = new Guid("32855971-ebcd-49ab-ad62-6150d5e7695b"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8421),
                            CreatedBy = "System",
                            Description = "TIPO DE PROYECTO",
                            IsSystemOwner = true,
                            Name = "PROJECTTYPE",
                            Order = 0,
                            Value = "TIPO DE PROYECTO 1"
                        },
                        new
                        {
                            Id = new Guid("c072e641-926b-4b31-8f3f-9d0c156fc101"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8426),
                            CreatedBy = "System",
                            Description = "TIPO DE PROYECTO",
                            IsSystemOwner = true,
                            Name = "PROJECTTYPE",
                            Order = 0,
                            Value = "TIPO DE PROYECTO 2"
                        },
                        new
                        {
                            Id = new Guid("d40e4b16-77d9-4bdc-bed3-2a57628ac33f"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8430),
                            CreatedBy = "System",
                            Description = "TIPO DE PROYECTO",
                            IsSystemOwner = true,
                            Name = "PROJECTTYPE",
                            Order = 0,
                            Value = "TIPO DE PROYECTO 3"
                        },
                        new
                        {
                            Id = new Guid("b0df1134-a322-4a26-8a48-26d3376aecdd"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8434),
                            CreatedBy = "System",
                            Description = "CATEGORIA DE PROYECTO",
                            IsSystemOwner = true,
                            Name = "PROJECTCATEGORY",
                            Order = 0,
                            Value = "CATEGORIA DE PROYECTO 1"
                        },
                        new
                        {
                            Id = new Guid("112f1c62-e1bd-47c0-8056-82e51afeb5d0"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8440),
                            CreatedBy = "System",
                            Description = "CATEGORIA DE PROYECTO",
                            IsSystemOwner = true,
                            Name = "PROJECTCATEGORY",
                            Order = 0,
                            Value = "CATEGORIA DE PROYECTO 2"
                        },
                        new
                        {
                            Id = new Guid("24f884da-f77e-4f92-bef7-c594c9099cd3"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8445),
                            CreatedBy = "System",
                            Description = "CATEGORIA DE PROYECTO",
                            IsSystemOwner = true,
                            Name = "PROJECTCATEGORY",
                            Order = 0,
                            Value = "CATEGORIA DE PROYECTO 3"
                        },
                        new
                        {
                            Id = new Guid("0c0d36bd-b065-40e8-aa03-a7e11ab5be37"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8449),
                            CreatedBy = "System",
                            Description = "ESTADO DE PROYECTO",
                            IsSystemOwner = true,
                            Name = "PROJECTSTATE",
                            Order = 0,
                            Value = "ESTADO DE PROYECTO 1"
                        },
                        new
                        {
                            Id = new Guid("fa1fc274-168b-4485-ad16-00ea5f172ffa"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8454),
                            CreatedBy = "System",
                            Description = "ESTADO DE PROYECTO",
                            IsSystemOwner = true,
                            Name = "PROJECTSTATE",
                            Order = 0,
                            Value = "ESTADO DE PROYECTO 2"
                        },
                        new
                        {
                            Id = new Guid("bf2f0e91-3a1c-4843-a148-c9c053ab1bed"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8460),
                            CreatedBy = "System",
                            Description = "ESTADO DE PROYECTO",
                            IsSystemOwner = true,
                            Name = "PROJECTSTATE",
                            Order = 0,
                            Value = "ESTADO DE PROYECTO 3"
                        },
                        new
                        {
                            Id = new Guid("edc0e8f7-47a3-40c4-ad3f-bac12f653c02"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8466),
                            CreatedBy = "System",
                            Description = "TIPO DE TAREA DE PROYECTO  01",
                            IsSystemOwner = true,
                            Name = "PROJECTTASKTYPE",
                            Order = 0,
                            Value = "TIPO DE TAREA DE PROYECTO 1"
                        },
                        new
                        {
                            Id = new Guid("d42cc742-599a-452f-a26f-bb9fb04766f8"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8470),
                            CreatedBy = "System",
                            Description = "TIPO DE TAREA DE PROYECTO  02",
                            IsSystemOwner = true,
                            Name = "PROJECTTASKTYPE",
                            Order = 0,
                            Value = "TIPO DE TAREA DE PROYECTO 2"
                        },
                        new
                        {
                            Id = new Guid("ed2fb04f-dcd9-4351-868c-88447e128e70"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8474),
                            CreatedBy = "System",
                            Description = "TIPO DE TAREA DE PROYECTO  03",
                            IsSystemOwner = true,
                            Name = "PROJECTTASKTYPE",
                            Order = 0,
                            Value = "TIPO DE TAREA DE PROYECTO 3"
                        },
                        new
                        {
                            Id = new Guid("c3908d96-19a5-40cf-a870-c3d34e96ac1b"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8479),
                            CreatedBy = "System",
                            Description = "ESTADO DE TAREA DE PROYECTO  01",
                            IsSystemOwner = true,
                            Name = "PROJECTTASKSTATE",
                            Order = 0,
                            Value = "ESTADO DE TAREA DE PROYECTO 1"
                        },
                        new
                        {
                            Id = new Guid("c73fe620-e152-4b29-87ad-9ae2004cdfbf"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8484),
                            CreatedBy = "System",
                            Description = "ESTADO DE TAREA DE PROYECTO  02",
                            IsSystemOwner = true,
                            Name = "PROJECTTASKSTATE",
                            Order = 0,
                            Value = "ESTADO DE TAREA DE PROYECTO 2"
                        },
                        new
                        {
                            Id = new Guid("d81648db-ef11-4e71-b33b-5b47f5344bdd"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8488),
                            CreatedBy = "System",
                            Description = "ESTADO DE TAREA DE PROYECTO  03",
                            IsSystemOwner = true,
                            Name = "PROJECTTASKSTATE",
                            Order = 0,
                            Value = "ESTADO DE TAREA DE PROYECTO 3"
                        },
                        new
                        {
                            Id = new Guid("d574f93d-f75f-469d-aed6-d5b294f73911"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8493),
                            CreatedBy = "System",
                            Description = "TIPO DE PRODUCTO 01",
                            IsSystemOwner = true,
                            Name = "PRODUCTTYPE",
                            Order = 0,
                            Value = "TIPO DE PRODUCTO 1"
                        },
                        new
                        {
                            Id = new Guid("1003026b-9d77-4032-b23c-d0a1e603ce18"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8498),
                            CreatedBy = "System",
                            Description = "TIPO DE PRODUCTO 02",
                            IsSystemOwner = true,
                            Name = "PRODUCTTYPE",
                            Order = 0,
                            Value = "TIPO DE PRODUCTO 2"
                        },
                        new
                        {
                            Id = new Guid("20ec3f22-9ab7-4b29-bc15-d6359ac16e29"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8562),
                            CreatedBy = "System",
                            Description = "TIPO DE PRODUCTO 03",
                            IsSystemOwner = true,
                            Name = "PRODUCTTYPE",
                            Order = 0,
                            Value = "TIPO DE PRODUCTO 3"
                        },
                        new
                        {
                            Id = new Guid("8fcee89a-2264-4d49-89ef-e97cb37f39ce"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8566),
                            CreatedBy = "System",
                            Description = "ROL DEL EMPLEADO  01",
                            IsSystemOwner = true,
                            Name = "EMPLOYEEROL",
                            Order = 0,
                            Value = "ROL DEL EMPLEADO 1"
                        },
                        new
                        {
                            Id = new Guid("5359a438-abcd-4e21-9a7c-9f0107059b3e"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8571),
                            CreatedBy = "System",
                            Description = "ROL DEL EMPLEADO  02",
                            IsSystemOwner = true,
                            Name = "EMPLOYEEROL",
                            Order = 0,
                            Value = "ROL DEL EMPLEADO 2"
                        },
                        new
                        {
                            Id = new Guid("30f9eaa1-9029-495d-866a-2b6b5f41c2b6"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8575),
                            CreatedBy = "System",
                            Description = "ROL DEL EMPLEADO  03",
                            IsSystemOwner = true,
                            Name = "EMPLOYEEROL",
                            Order = 0,
                            Value = "ROL DEL EMPLEADO 3"
                        },
                        new
                        {
                            Id = new Guid("2d5a5fb0-d3ca-44e1-abdc-bbe58d29fb6b"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8581),
                            CreatedBy = "System",
                            Description = "Usuario tipo Usuario",
                            IsSystemOwner = true,
                            Name = "USERSTYPE",
                            Order = 0,
                            Value = "Usuario"
                        },
                        new
                        {
                            Id = new Guid("f11d7e55-f12e-4214-b100-0989b38f66bc"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8585),
                            CreatedBy = "System",
                            Description = "Usuario tipo Contacto",
                            IsSystemOwner = true,
                            Name = "USERSTYPE",
                            Order = 0,
                            Value = "Contacto"
                        },
                        new
                        {
                            Id = new Guid("f35d8016-c93b-4a05-9301-4c228d639a02"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8588),
                            CreatedBy = "System",
                            Description = "Usuario tipo Empleado",
                            IsSystemOwner = true,
                            Name = "USERSTYPE",
                            Order = 0,
                            Value = "Empleado"
                        },
                        new
                        {
                            Id = new Guid("f49725ee-8d2d-44b7-b995-1830348c6b86"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8591),
                            CreatedBy = "System",
                            Description = "Usuario tipo Gerente",
                            IsSystemOwner = true,
                            Name = "USERSTYPE",
                            Order = 0,
                            Value = "Gerente"
                        },
                        new
                        {
                            Id = new Guid("efd0f32b-cbf5-460e-b6d1-f17dfee2a13e"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8594),
                            CreatedBy = "System",
                            Description = "Usuario tipo Administrador",
                            IsSystemOwner = true,
                            Name = "USERSTYPE",
                            Order = 0,
                            Value = "Administrador"
                        },
                        new
                        {
                            Id = new Guid("43c4bce9-c056-43e7-84f3-1c67877a2c70"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8887),
                            CreatedBy = "System",
                            Description = "Dashboard",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 0,
                            Value = "Dashboard",
                            Value2 = "icon-home"
                        },
                        new
                        {
                            Id = new Guid("2565e61d-86d4-4a72-8886-296733908e5b"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8969),
                            CreatedBy = "System",
                            Description = "Dashboard Analytical",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 0,
                            ParentId = new Guid("43c4bce9-c056-43e7-84f3-1c67877a2c70"),
                            Value = "Analytical",
                            Value1 = "/dashboard/index"
                        },
                        new
                        {
                            Id = new Guid("279db491-1a2a-4043-baf5-70835351a3ca"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(8976),
                            CreatedBy = "System",
                            Description = "Mantenimientos",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 1,
                            Value = "Mantenimientos",
                            Value2 = "icon-grid"
                        },
                        new
                        {
                            Id = new Guid("aebe7952-8a9d-49fa-bc6f-dc501bc89082"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9044),
                            CreatedBy = "System",
                            Description = "Mantenimientos Empresas",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 0,
                            ParentId = new Guid("279db491-1a2a-4043-baf5-70835351a3ca"),
                            Value = "Empresas",
                            Value1 = "/mantenimientos/empresas"
                        },
                        new
                        {
                            Id = new Guid("655b2ad6-6c94-4a67-a3de-9cbe3501d7c0"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9048),
                            CreatedBy = "System",
                            Description = "Mantenimientos Clientes",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 2,
                            ParentId = new Guid("279db491-1a2a-4043-baf5-70835351a3ca"),
                            Value = "Clientes",
                            Value1 = "/mantenimientos/clientes"
                        },
                        new
                        {
                            Id = new Guid("84e9e9c9-afbb-4944-9699-67cf269b91ae"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9051),
                            CreatedBy = "System",
                            Description = "Mantenimientos Proyectos",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 3,
                            ParentId = new Guid("279db491-1a2a-4043-baf5-70835351a3ca"),
                            Value = "Proyectos",
                            Value1 = "/mantenimientos/proyectos"
                        },
                        new
                        {
                            Id = new Guid("749d90e3-e39c-4630-9316-71cc814ab1ee"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9055),
                            CreatedBy = "System",
                            Description = "Mantenimientos Catalogos",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 4,
                            ParentId = new Guid("279db491-1a2a-4043-baf5-70835351a3ca"),
                            Value = "Catalogos",
                            Value1 = "/mantenimientos/catalogos"
                        },
                        new
                        {
                            Id = new Guid("4fd6aa25-040a-4a58-8f3d-ea1aeff04bd6"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9058),
                            CreatedBy = "System",
                            Description = "Mantenimientos Usuarios",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 5,
                            ParentId = new Guid("279db491-1a2a-4043-baf5-70835351a3ca"),
                            Value = "Usuarios",
                            Value1 = "/mantenimientos/usuarios"
                        },
                        new
                        {
                            Id = new Guid("f3f6bde7-0c6a-4dc2-b785-674f1ca77b95"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9061),
                            CreatedBy = "System",
                            Description = "Mantenimientos Roles",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 6,
                            ParentId = new Guid("279db491-1a2a-4043-baf5-70835351a3ca"),
                            Value = "Roles",
                            Value1 = "/mantenimientos/roles"
                        },
                        new
                        {
                            Id = new Guid("bf39e8be-8707-4a80-bf9b-a30486a6b4bb"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9064),
                            CreatedBy = "System",
                            Description = "Mantenimientos Filiales",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 7,
                            ParentId = new Guid("279db491-1a2a-4043-baf5-70835351a3ca"),
                            Value = "Filiales",
                            Value1 = "/mantenimientos/filiales"
                        },
                        new
                        {
                            Id = new Guid("b2e7412c-d120-4cc3-a77e-b97b3796a46f"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9066),
                            CreatedBy = "System",
                            Description = "Mantenimientos Contactos",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 8,
                            ParentId = new Guid("279db491-1a2a-4043-baf5-70835351a3ca"),
                            Value = "Contactos",
                            Value1 = "/mantenimientos/empresas/contactos"
                        },
                        new
                        {
                            Id = new Guid("f535972a-7807-4335-91ec-a82b19eea803"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9069),
                            CreatedBy = "System",
                            Description = "Mantenimientos Empleados",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 9,
                            ParentId = new Guid("279db491-1a2a-4043-baf5-70835351a3ca"),
                            Value = "Empleados",
                            Value1 = "/mantenimientos/empleados"
                        },
                        new
                        {
                            Id = new Guid("8804915e-1694-486b-8fa0-5b47d0fdaa11"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9135),
                            CreatedBy = "System",
                            Description = "Mantenimientos Tareas",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 10,
                            ParentId = new Guid("279db491-1a2a-4043-baf5-70835351a3ca"),
                            Value = "Tareas",
                            Value1 = "/mantenimientos/proyectos/tareas"
                        },
                        new
                        {
                            Id = new Guid("90eba23b-5ccd-49b2-9e58-c86b440ae431"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9139),
                            CreatedBy = "System",
                            Description = "Mantenimientos Menus",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 11,
                            ParentId = new Guid("279db491-1a2a-4043-baf5-70835351a3ca"),
                            Value = "Menu",
                            Value1 = "/mantenimientos/menus"
                        },
                        new
                        {
                            Id = new Guid("15299e9a-ebc1-45e1-9a7a-293253a01f1e"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9146),
                            CreatedBy = "System",
                            Description = "Movimientos",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 2,
                            Value = "Movimientos",
                            Value2 = "icon-folder"
                        },
                        new
                        {
                            Id = new Guid("b05309c0-9b19-4474-a025-b59b526f1930"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9198),
                            CreatedBy = "System",
                            Description = "Movimientos Facturacion",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 0,
                            ParentId = new Guid("15299e9a-ebc1-45e1-9a7a-293253a01f1e"),
                            Value = "Facturacion",
                            Value1 = "/movimientos/facturacion"
                        },
                        new
                        {
                            Id = new Guid("85db29c8-6df0-481b-8065-c10f55d4050b"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9201),
                            CreatedBy = "System",
                            Description = "Movimientos Actividades proyecto",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 1,
                            ParentId = new Guid("15299e9a-ebc1-45e1-9a7a-293253a01f1e"),
                            Value = "Actividades proyecto",
                            Value1 = "/movimientos/proyectos/actividades"
                        },
                        new
                        {
                            Id = new Guid("abc3cd41-a3bf-4167-b7c9-c0d03cb6c84f"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9204),
                            CreatedBy = "System",
                            Description = "Movimientos Reporte de Proyectos",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 3,
                            ParentId = new Guid("15299e9a-ebc1-45e1-9a7a-293253a01f1e"),
                            Value = "Generar Reporte de Proyectos",
                            Value1 = "/movimientos/proyectos/reportes"
                        },
                        new
                        {
                            Id = new Guid("917f29ea-ade8-4b47-bbf4-1b13b5ea3fa8"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9207),
                            CreatedBy = "System",
                            Description = "Revisión de Reportes PM",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 4,
                            ParentId = new Guid("15299e9a-ebc1-45e1-9a7a-293253a01f1e"),
                            Value = "Revisión de Reportes PM",
                            Value1 = "/movimientos/proyectos/reportes-pm"
                        },
                        new
                        {
                            Id = new Guid("bc49bc14-4834-4b5a-a1e8-26715ae2c57e"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9210),
                            CreatedBy = "System",
                            Description = "Aprob. de Reportes Cust",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 5,
                            ParentId = new Guid("15299e9a-ebc1-45e1-9a7a-293253a01f1e"),
                            Value = "Aprob. de Reportes Cust",
                            Value1 = "/movimientos/proyectos/reportes-customer"
                        },
                        new
                        {
                            Id = new Guid("dd84c814-812e-4a54-a7d3-ea863da1a5c8"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9214),
                            CreatedBy = "System",
                            Description = "Reportes",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 3,
                            Value = "Reportes",
                            Value2 = "icon-globe"
                        },
                        new
                        {
                            Id = new Guid("fb439685-8613-4b10-bed0-64dfc71a433c"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9262),
                            CreatedBy = "System",
                            Description = "Reportes Proyectos y actividades",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 0,
                            ParentId = new Guid("dd84c814-812e-4a54-a7d3-ea863da1a5c8"),
                            Value = "Proyectos y actividades",
                            Value1 = "/reportes/proyectos/actividades"
                        },
                        new
                        {
                            Id = new Guid("15be86da-51b5-40d8-92ee-e426a2a5df8f"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9266),
                            CreatedBy = "System",
                            Description = "Reportes Facturación vs Actividades",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 1,
                            ParentId = new Guid("dd84c814-812e-4a54-a7d3-ea863da1a5c8"),
                            Value = "Facturación vs Actividades",
                            Value1 = "/reportes/facturacion/actividades"
                        },
                        new
                        {
                            Id = new Guid("38d321e1-6c32-4adf-bc6e-461061fc2b66"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9269),
                            CreatedBy = "System",
                            Description = "Reportes Estados de Clientes Unificados",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 2,
                            ParentId = new Guid("dd84c814-812e-4a54-a7d3-ea863da1a5c8"),
                            Value = "Estados de Clientes Unificados",
                            Value1 = "/reportes/clientes/unificados"
                        },
                        new
                        {
                            Id = new Guid("6a9157ad-d1a8-464d-8f6f-a065a9b6c61c"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9273),
                            CreatedBy = "System",
                            Description = "Participaciones",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 4,
                            Value = "Participaciones",
                            Value2 = "icon-folder"
                        },
                        new
                        {
                            Id = new Guid("02647d85-581b-4e74-acce-9adddaecf680"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9319),
                            CreatedBy = "System",
                            Description = "Resumen de Participaciones",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 0,
                            ParentId = new Guid("6a9157ad-d1a8-464d-8f6f-a065a9b6c61c"),
                            Value = "Resumen",
                            Value1 = "/participaciones/general"
                        },
                        new
                        {
                            Id = new Guid("4c748e6e-60a6-47fd-b83a-d91fc57feb0f"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9323),
                            CreatedBy = "System",
                            Description = "Participaciones Discrecionales",
                            IsSystemOwner = true,
                            Name = "MENUS",
                            Order = 1,
                            ParentId = new Guid("6a9157ad-d1a8-464d-8f6f-a065a9b6c61c"),
                            Value = "Participaciones Discrecionales",
                            Value1 = "/participaciones/discresionales"
                        },
                        new
                        {
                            Id = new Guid("c051f36c-5c8d-4aae-8c82-57a284c6929e"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9332),
                            CreatedBy = "System",
                            Description = "CULMINACIÓN DE PROYECTO",
                            IsSystemOwner = true,
                            Name = "DISCRETIONARYTYPE",
                            Order = 0,
                            Value = "CULMINACIÓN DE PROYECTO"
                        },
                        new
                        {
                            Id = new Guid("f601b318-b0f9-4940-b5eb-bcb33ae7f5ea"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 532, DateTimeKind.Utc).AddTicks(9336),
                            CreatedBy = "System",
                            Description = "PREMIO",
                            IsSystemOwner = true,
                            Name = "DISCRETIONARYTYPE",
                            Order = 0,
                            Value = "PREMIO"
                        });
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnOrder(7);

                    b.Property<Guid?>("CatalogRegionCityId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(6);

                    b.Property<Guid?>("CatalogRegionCountryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(4);

                    b.Property<Guid?>("CatalogRegionStateId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(5);

                    b.Property<Guid?>("CatalogTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnOrder(3);

                    b.Property<string>("NumberId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("Company", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f20971a2-2b7b-46df-b8ff-2964e5e8d37b"),
                            Active = true,
                            Address = "Address",
                            CatalogRegionCityId = new Guid("4a4dfebf-6cd4-42bb-aeee-36775ec5b70c"),
                            CatalogRegionCountryId = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            CatalogRegionStateId = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            CatalogTypeId = new Guid("22874dde-3ef1-4875-bc02-88c7863444f1"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(176),
                            CreatedBy = "System",
                            Name = "Giga",
                            NumberId = "123456789"
                        });
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Area")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Department")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneMobile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneOffice")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneOfficeExt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Position")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Contact", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("95147ae2-93ee-43fd-acf0-d5eb248a597d"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(644),
                            CreatedBy = "System",
                            CustomerId = new Guid("80f19c33-2a57-4767-8a1e-c58e0ebfd6fb"),
                            Email = "contact1@mail.com",
                            LastName = "Contact 1",
                            Names = "Contact 1"
                        },
                        new
                        {
                            Id = new Guid("f234e182-b274-4109-bacf-3edc0d6d6ab8"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(656),
                            CreatedBy = "System",
                            CustomerId = new Guid("80f19c33-2a57-4767-8a1e-c58e0ebfd6fb"),
                            Email = "contact1_1@mail.com",
                            LastName = "Contact 1.1",
                            Names = "Contact 1.1"
                        },
                        new
                        {
                            Id = new Guid("aaf570a8-39da-4c43-bcce-11f92a7e025c"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(663),
                            CreatedBy = "System",
                            CustomerId = new Guid("f1b98eda-a3f0-4006-b947-1cd45ffd2cac"),
                            Email = "contact1@mail.com",
                            LastName = "Contact 2",
                            Names = "Contact 2"
                        },
                        new
                        {
                            Id = new Guid("f1e66b7a-3e34-4df8-ab10-f372ea2ba8d6"),
                            Active = true,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(668),
                            CreatedBy = "System",
                            CustomerId = new Guid("f1b98eda-a3f0-4006-b947-1cd45ffd2cac"),
                            Email = "contact2_1@mail.com",
                            LastName = "Contact 2.1",
                            Names = "Contact 2.1"
                        });
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid?>("CatalogCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogIndustrySubTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogIndustryTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogRegionCityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogRegionCountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogRegionStateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CostHourMen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Deadlinebilling")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NumberId")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid?>("SubsidiaryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubsidiaryId");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("80f19c33-2a57-4767-8a1e-c58e0ebfd6fb"),
                            Active = true,
                            Address = "Customer address",
                            CatalogCurrencyId = new Guid("f124a4c3-b3e2-4e6b-96d4-26d4712be343"),
                            CatalogIndustrySubTypeId = new Guid("0576c349-ce1e-4761-a4ec-7ef228f426f5"),
                            CatalogIndustryTypeId = new Guid("1bcf3c7b-2e0e-4401-aa5f-d1460363b885"),
                            CatalogRegionCityId = new Guid("9e07bed6-eee4-4fd6-afc1-bcb13b0ea7cc"),
                            CatalogRegionCountryId = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            CatalogRegionStateId = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            CatalogTypeId = new Guid("22874dde-3ef1-4875-bc02-88c7863444f1"),
                            CostHourMen = 0m,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(1073),
                            CreatedBy = "System",
                            Name = "Customer 1",
                            NumberId = "123456789",
                            Phone = "000 123456789",
                            SubsidiaryId = new Guid("8d5f7b87-f06f-4168-b67e-cbb897f0f1c5")
                        },
                        new
                        {
                            Id = new Guid("f1b98eda-a3f0-4006-b947-1cd45ffd2cac"),
                            Active = true,
                            Address = "Customer1 address",
                            CatalogCurrencyId = new Guid("f124a4c3-b3e2-4e6b-96d4-26d4712be343"),
                            CatalogIndustrySubTypeId = new Guid("0576c349-ce1e-4761-a4ec-7ef228f426f5"),
                            CatalogIndustryTypeId = new Guid("1bcf3c7b-2e0e-4401-aa5f-d1460363b885"),
                            CatalogRegionCityId = new Guid("9e07bed6-eee4-4fd6-afc1-bcb13b0ea7cc"),
                            CatalogRegionCountryId = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            CatalogRegionStateId = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            CatalogTypeId = new Guid("22874dde-3ef1-4875-bc02-88c7863444f1"),
                            CostHourMen = 0m,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(1105),
                            CreatedBy = "System",
                            Name = "Customer 2",
                            NumberId = "123456789",
                            Phone = "000 123456789",
                            SubsidiaryId = new Guid("8d5f7b87-f06f-4168-b67e-cbb897f0f1c5")
                        },
                        new
                        {
                            Id = new Guid("3ba8ddcb-55d2-4bf4-a06f-80876ad56cb5"),
                            Active = true,
                            Address = "Customer1 address",
                            CatalogCurrencyId = new Guid("f124a4c3-b3e2-4e6b-96d4-26d4712be343"),
                            CatalogIndustrySubTypeId = new Guid("0576c349-ce1e-4761-a4ec-7ef228f426f5"),
                            CatalogIndustryTypeId = new Guid("1bcf3c7b-2e0e-4401-aa5f-d1460363b885"),
                            CatalogRegionCityId = new Guid("9e07bed6-eee4-4fd6-afc1-bcb13b0ea7cc"),
                            CatalogRegionCountryId = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            CatalogRegionStateId = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            CatalogTypeId = new Guid("22874dde-3ef1-4875-bc02-88c7863444f1"),
                            CostHourMen = 0m,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(1121),
                            CreatedBy = "System",
                            Name = "Customer 3",
                            NumberId = "123456789",
                            Phone = "000 123456789",
                            SubsidiaryId = new Guid("8d5f7b87-f06f-4168-b67e-cbb897f0f1c5")
                        },
                        new
                        {
                            Id = new Guid("7ee0ef41-f62d-43c3-8ece-a3eb4a66c311"),
                            Active = true,
                            Address = "Customer1 address",
                            CatalogCurrencyId = new Guid("f124a4c3-b3e2-4e6b-96d4-26d4712be343"),
                            CatalogIndustrySubTypeId = new Guid("0576c349-ce1e-4761-a4ec-7ef228f426f5"),
                            CatalogIndustryTypeId = new Guid("1bcf3c7b-2e0e-4401-aa5f-d1460363b885"),
                            CatalogRegionCityId = new Guid("9e07bed6-eee4-4fd6-afc1-bcb13b0ea7cc"),
                            CatalogRegionCountryId = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            CatalogRegionStateId = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            CatalogTypeId = new Guid("22874dde-3ef1-4875-bc02-88c7863444f1"),
                            CostHourMen = 0m,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(1139),
                            CreatedBy = "System",
                            Name = "Customer 4",
                            NumberId = "123456789",
                            Phone = "000 123456789",
                            SubsidiaryId = new Guid("8d5f7b87-f06f-4168-b67e-cbb897f0f1c5")
                        },
                        new
                        {
                            Id = new Guid("2c3eca7b-dcaa-4618-8984-6b96369fbd06"),
                            Active = true,
                            Address = "Customer1 address",
                            CatalogCurrencyId = new Guid("f124a4c3-b3e2-4e6b-96d4-26d4712be343"),
                            CatalogIndustrySubTypeId = new Guid("0576c349-ce1e-4761-a4ec-7ef228f426f5"),
                            CatalogIndustryTypeId = new Guid("1bcf3c7b-2e0e-4401-aa5f-d1460363b885"),
                            CatalogRegionCityId = new Guid("9e07bed6-eee4-4fd6-afc1-bcb13b0ea7cc"),
                            CatalogRegionCountryId = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            CatalogRegionStateId = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            CatalogTypeId = new Guid("22874dde-3ef1-4875-bc02-88c7863444f1"),
                            CostHourMen = 0m,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(1155),
                            CreatedBy = "System",
                            Name = "Customer 5",
                            NumberId = "123456789",
                            Phone = "000 123456789",
                            SubsidiaryId = new Guid("8d5f7b87-f06f-4168-b67e-cbb897f0f1c5")
                        },
                        new
                        {
                            Id = new Guid("c53e126c-506c-45a1-a328-126deef87cee"),
                            Active = true,
                            Address = "Customer1 address",
                            CatalogCurrencyId = new Guid("f124a4c3-b3e2-4e6b-96d4-26d4712be343"),
                            CatalogIndustrySubTypeId = new Guid("0576c349-ce1e-4761-a4ec-7ef228f426f5"),
                            CatalogIndustryTypeId = new Guid("1bcf3c7b-2e0e-4401-aa5f-d1460363b885"),
                            CatalogRegionCityId = new Guid("9e07bed6-eee4-4fd6-afc1-bcb13b0ea7cc"),
                            CatalogRegionCountryId = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            CatalogRegionStateId = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            CatalogTypeId = new Guid("22874dde-3ef1-4875-bc02-88c7863444f1"),
                            CostHourMen = 0m,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(1175),
                            CreatedBy = "System",
                            Name = "Customer 6",
                            NumberId = "123456789",
                            Phone = "000 123456789",
                            SubsidiaryId = new Guid("8d5f7b87-f06f-4168-b67e-cbb897f0f1c5")
                        },
                        new
                        {
                            Id = new Guid("4060dac4-83c1-48c6-ba0d-47cc426bd426"),
                            Active = true,
                            Address = "Customer1 address",
                            CatalogCurrencyId = new Guid("f124a4c3-b3e2-4e6b-96d4-26d4712be343"),
                            CatalogIndustrySubTypeId = new Guid("0576c349-ce1e-4761-a4ec-7ef228f426f5"),
                            CatalogIndustryTypeId = new Guid("1bcf3c7b-2e0e-4401-aa5f-d1460363b885"),
                            CatalogRegionCityId = new Guid("9e07bed6-eee4-4fd6-afc1-bcb13b0ea7cc"),
                            CatalogRegionCountryId = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            CatalogRegionStateId = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            CatalogTypeId = new Guid("22874dde-3ef1-4875-bc02-88c7863444f1"),
                            CostHourMen = 0m,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(1194),
                            CreatedBy = "System",
                            Name = "Customer 7",
                            NumberId = "123456789",
                            Phone = "000 123456789",
                            SubsidiaryId = new Guid("8d5f7b87-f06f-4168-b67e-cbb897f0f1c5")
                        });
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("CalculateFactor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((1))");

                    b.Property<Guid?>("CatalogAreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogCostCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogDepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogEmployeeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogPositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CostHour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Names")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneMobile")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneOffice")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneOfficeExt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("SubsidiaryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "SubsidiaryId" }, "IX_Employee_SubsidiaryId");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("78ebf29f-dcfe-4e3c-bf77-069b158262e8"),
                            Active = true,
                            CalculateFactor = 0m,
                            CatalogAreaId = new Guid("b7571cdb-50bb-4c0d-ae2e-f854f5fddc24"),
                            CatalogCostCenterId = new Guid("33220a02-5ae9-46b9-9f3e-664cfe140320"),
                            CatalogCurrencyId = new Guid("f124a4c3-b3e2-4e6b-96d4-26d4712be343"),
                            CatalogDepartmentId = new Guid("e1cf4d2a-de84-4f11-a480-e4acad0a689d"),
                            CatalogEmployeeTypeId = new Guid("5fadbd15-2505-44f9-b197-8c8b255cb3e6"),
                            CatalogPositionId = new Guid("c7d0f2c1-8039-4171-b4a2-e67defafd387"),
                            CostHour = 10m,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(1632),
                            CreatedBy = "System",
                            LastName = "Empleado 1",
                            Names = "Empleado 1",
                            PhoneMobile = "123456789",
                            PhoneOffice = "123456789",
                            PhoneOfficeExt = "123456789",
                            SubsidiaryId = new Guid("8d5f7b87-f06f-4168-b67e-cbb897f0f1c5")
                        },
                        new
                        {
                            Id = new Guid("782e2879-42fe-4206-8516-4cb7c1bd6270"),
                            Active = true,
                            CalculateFactor = 0m,
                            CatalogAreaId = new Guid("b7571cdb-50bb-4c0d-ae2e-f854f5fddc24"),
                            CatalogCostCenterId = new Guid("33220a02-5ae9-46b9-9f3e-664cfe140320"),
                            CatalogCurrencyId = new Guid("f124a4c3-b3e2-4e6b-96d4-26d4712be343"),
                            CatalogDepartmentId = new Guid("e1cf4d2a-de84-4f11-a480-e4acad0a689d"),
                            CatalogEmployeeTypeId = new Guid("5fadbd15-2505-44f9-b197-8c8b255cb3e6"),
                            CatalogPositionId = new Guid("c7d0f2c1-8039-4171-b4a2-e67defafd387"),
                            CostHour = 10m,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(1653),
                            CreatedBy = "System",
                            LastName = "Empleado 2",
                            Names = "Empleado 1",
                            PhoneMobile = "123456789",
                            PhoneOffice = "123456789",
                            PhoneOfficeExt = "123456789",
                            SubsidiaryId = new Guid("8d5f7b87-f06f-4168-b67e-cbb897f0f1c5")
                        },
                        new
                        {
                            Id = new Guid("56da204e-c648-4beb-85cd-2e20333c24c5"),
                            Active = true,
                            CalculateFactor = 0m,
                            CatalogAreaId = new Guid("b7571cdb-50bb-4c0d-ae2e-f854f5fddc24"),
                            CatalogCostCenterId = new Guid("33220a02-5ae9-46b9-9f3e-664cfe140320"),
                            CatalogCurrencyId = new Guid("f124a4c3-b3e2-4e6b-96d4-26d4712be343"),
                            CatalogDepartmentId = new Guid("e1cf4d2a-de84-4f11-a480-e4acad0a689d"),
                            CatalogEmployeeTypeId = new Guid("5fadbd15-2505-44f9-b197-8c8b255cb3e6"),
                            CatalogPositionId = new Guid("c7d0f2c1-8039-4171-b4a2-e67defafd387"),
                            CostHour = 10m,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(1667),
                            CreatedBy = "System",
                            LastName = "Empleado 3",
                            Names = "Empleado 1",
                            PhoneMobile = "123456789",
                            PhoneOffice = "123456789",
                            PhoneOfficeExt = "123456789",
                            SubsidiaryId = new Guid("8d5f7b87-f06f-4168-b67e-cbb897f0f1c5")
                        },
                        new
                        {
                            Id = new Guid("2e54cc33-b22d-4cf7-9ba0-4bf8298fc348"),
                            Active = true,
                            CalculateFactor = 0m,
                            CatalogAreaId = new Guid("b7571cdb-50bb-4c0d-ae2e-f854f5fddc24"),
                            CatalogCostCenterId = new Guid("33220a02-5ae9-46b9-9f3e-664cfe140320"),
                            CatalogCurrencyId = new Guid("f124a4c3-b3e2-4e6b-96d4-26d4712be343"),
                            CatalogDepartmentId = new Guid("e1cf4d2a-de84-4f11-a480-e4acad0a689d"),
                            CatalogEmployeeTypeId = new Guid("5fadbd15-2505-44f9-b197-8c8b255cb3e6"),
                            CatalogPositionId = new Guid("c7d0f2c1-8039-4171-b4a2-e67defafd387"),
                            CostHour = 10m,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(1748),
                            CreatedBy = "System",
                            LastName = "Empleado 4",
                            Names = "Empleado 1",
                            PhoneMobile = "123456789",
                            PhoneOffice = "123456789",
                            PhoneOfficeExt = "123456789",
                            SubsidiaryId = new Guid("8d5f7b87-f06f-4168-b67e-cbb897f0f1c5")
                        },
                        new
                        {
                            Id = new Guid("fdf458d7-d43a-43b6-be92-70212348633b"),
                            Active = true,
                            CalculateFactor = 0m,
                            CatalogAreaId = new Guid("b7571cdb-50bb-4c0d-ae2e-f854f5fddc24"),
                            CatalogCostCenterId = new Guid("33220a02-5ae9-46b9-9f3e-664cfe140320"),
                            CatalogCurrencyId = new Guid("f124a4c3-b3e2-4e6b-96d4-26d4712be343"),
                            CatalogDepartmentId = new Guid("e1cf4d2a-de84-4f11-a480-e4acad0a689d"),
                            CatalogEmployeeTypeId = new Guid("5fadbd15-2505-44f9-b197-8c8b255cb3e6"),
                            CatalogPositionId = new Guid("c7d0f2c1-8039-4171-b4a2-e67defafd387"),
                            CostHour = 10m,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(1763),
                            CreatedBy = "System",
                            LastName = "Empleado 5",
                            Names = "Empleado 1",
                            PhoneMobile = "123456789",
                            PhoneOffice = "123456789",
                            PhoneOfficeExt = "123456789",
                            SubsidiaryId = new Guid("8d5f7b87-f06f-4168-b67e-cbb897f0f1c5")
                        },
                        new
                        {
                            Id = new Guid("456aa0b7-58a6-4c2d-9475-c7656f6fa793"),
                            Active = true,
                            CalculateFactor = 0m,
                            CatalogAreaId = new Guid("b7571cdb-50bb-4c0d-ae2e-f854f5fddc24"),
                            CatalogCostCenterId = new Guid("33220a02-5ae9-46b9-9f3e-664cfe140320"),
                            CatalogCurrencyId = new Guid("f124a4c3-b3e2-4e6b-96d4-26d4712be343"),
                            CatalogDepartmentId = new Guid("e1cf4d2a-de84-4f11-a480-e4acad0a689d"),
                            CatalogEmployeeTypeId = new Guid("5fadbd15-2505-44f9-b197-8c8b255cb3e6"),
                            CatalogPositionId = new Guid("c7d0f2c1-8039-4171-b4a2-e67defafd387"),
                            CostHour = 10m,
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(1780),
                            CreatedBy = "System",
                            LastName = "Empleado 6",
                            Names = "Empleado 1",
                            PhoneMobile = "123456789",
                            PhoneOffice = "123456789",
                            PhoneOfficeExt = "123456789",
                            SubsidiaryId = new Guid("8d5f7b87-f06f-4168-b67e-cbb897f0f1c5")
                        });
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.EmployeeAward", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AwardDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmployeeAward_EmployeeId");

                    b.ToTable("EmployeeAward", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.EmployeeCertification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EmissionDate")
                        .HasColumnType("date");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmployeeCertification_EmployeeId");

                    b.ToTable("EmployeeCertification", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.EmployeeExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BeginDate")
                        .HasColumnType("date");

                    b.Property<string>("CompanyCity")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Type")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmployeeExperience_EmployeeId");

                    b.ToTable("EmployeeExperience", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.EmployeeSkillAbility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmployeeSkillAbility_EmployeeId");

                    b.ToTable("EmployeeSkillAbility", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.EmployeeStudy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("EmissionDate")
                        .HasColumnType("date");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FieldKnowledge")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_EmployeeStudy_EmployeeId");

                    b.ToTable("EmployeeStudy", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.FinancialParticipation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CatalogDiscretionaryTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("FinancialParticipation", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.HourBank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool?>("ApplyValidity")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CatalogCurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogHourBankTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateValidity")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("HourBalance")
                        .HasColumnType("int");

                    b.Property<decimal>("HourCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("HourSet")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("PurchaseOrderNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Terms")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("HourBank", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.MenuRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("CatalogMenuId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CatalogMenuId");

                    b.ToTable("MenuRole", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec31ea54-8bd2-434a-8b3c-87449939ba72"),
                            Active = true,
                            CatalogMenuId = new Guid("43c4bce9-c056-43e7-84f3-1c67877a2c70"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2182),
                            CreatedBy = "System",
                            RoleId = new Guid("1b48ee96-5788-4fef-90f0-34e891ad661f")
                        },
                        new
                        {
                            Id = new Guid("9853480e-65ed-4d76-9aed-aef77a1ff24e"),
                            Active = true,
                            CatalogMenuId = new Guid("2565e61d-86d4-4a72-8886-296733908e5b"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2191),
                            CreatedBy = "System",
                            RoleId = new Guid("1b48ee96-5788-4fef-90f0-34e891ad661f")
                        },
                        new
                        {
                            Id = new Guid("4ffd125c-6882-40e1-ad67-ed917128eb63"),
                            Active = true,
                            CatalogMenuId = new Guid("dd84c814-812e-4a54-a7d3-ea863da1a5c8"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2196),
                            CreatedBy = "System",
                            RoleId = new Guid("1b48ee96-5788-4fef-90f0-34e891ad661f")
                        },
                        new
                        {
                            Id = new Guid("f77281af-8e2e-44a4-b10a-849d4ad220dc"),
                            Active = true,
                            CatalogMenuId = new Guid("fb439685-8613-4b10-bed0-64dfc71a433c"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2216),
                            CreatedBy = "System",
                            RoleId = new Guid("1b48ee96-5788-4fef-90f0-34e891ad661f")
                        },
                        new
                        {
                            Id = new Guid("3890b8d1-e097-4bf6-9ea0-c1c1cf276ae3"),
                            Active = true,
                            CatalogMenuId = new Guid("15be86da-51b5-40d8-92ee-e426a2a5df8f"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2220),
                            CreatedBy = "System",
                            RoleId = new Guid("1b48ee96-5788-4fef-90f0-34e891ad661f")
                        },
                        new
                        {
                            Id = new Guid("340d734e-5722-4a66-beac-74276bff6945"),
                            Active = true,
                            CatalogMenuId = new Guid("38d321e1-6c32-4adf-bc6e-461061fc2b66"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2227),
                            CreatedBy = "System",
                            RoleId = new Guid("1b48ee96-5788-4fef-90f0-34e891ad661f")
                        },
                        new
                        {
                            Id = new Guid("44a3cc8a-a4bc-4081-81cf-a5021bcc03ea"),
                            Active = true,
                            CatalogMenuId = new Guid("15299e9a-ebc1-45e1-9a7a-293253a01f1e"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2231),
                            CreatedBy = "System",
                            RoleId = new Guid("da7afbba-57a0-40da-a3b4-4542c20ff2a5")
                        },
                        new
                        {
                            Id = new Guid("426d84e2-7449-4792-a85a-6c868aee68de"),
                            Active = true,
                            CatalogMenuId = new Guid("abc3cd41-a3bf-4167-b7c9-c0d03cb6c84f"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2235),
                            CreatedBy = "System",
                            RoleId = new Guid("da7afbba-57a0-40da-a3b4-4542c20ff2a5")
                        },
                        new
                        {
                            Id = new Guid("964f044a-5562-4a11-a173-6df4d0f4768f"),
                            Active = true,
                            CatalogMenuId = new Guid("dd84c814-812e-4a54-a7d3-ea863da1a5c8"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2239),
                            CreatedBy = "System",
                            RoleId = new Guid("da7afbba-57a0-40da-a3b4-4542c20ff2a5")
                        },
                        new
                        {
                            Id = new Guid("270de161-b0a0-4606-8f39-8523b24176d6"),
                            Active = true,
                            CatalogMenuId = new Guid("fb439685-8613-4b10-bed0-64dfc71a433c"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2245),
                            CreatedBy = "System",
                            RoleId = new Guid("da7afbba-57a0-40da-a3b4-4542c20ff2a5")
                        },
                        new
                        {
                            Id = new Guid("8c4c307a-0461-454d-870c-8f6eb92bebef"),
                            Active = true,
                            CatalogMenuId = new Guid("15be86da-51b5-40d8-92ee-e426a2a5df8f"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2249),
                            CreatedBy = "System",
                            RoleId = new Guid("da7afbba-57a0-40da-a3b4-4542c20ff2a5")
                        },
                        new
                        {
                            Id = new Guid("f9854432-f787-4e0a-be39-0a6b49c8252a"),
                            Active = true,
                            CatalogMenuId = new Guid("38d321e1-6c32-4adf-bc6e-461061fc2b66"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2258),
                            CreatedBy = "System",
                            RoleId = new Guid("da7afbba-57a0-40da-a3b4-4542c20ff2a5")
                        },
                        new
                        {
                            Id = new Guid("c313c01b-67eb-4d8c-a9b2-9f8b909f528e"),
                            Active = true,
                            CatalogMenuId = new Guid("43c4bce9-c056-43e7-84f3-1c67877a2c70"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2262),
                            CreatedBy = "System",
                            RoleId = new Guid("fd4535d2-7103-498e-85bd-9651778a4b72")
                        },
                        new
                        {
                            Id = new Guid("f41e8eb2-b27c-470b-9a76-2d42bb7e2d70"),
                            Active = true,
                            CatalogMenuId = new Guid("2565e61d-86d4-4a72-8886-296733908e5b"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2265),
                            CreatedBy = "System",
                            RoleId = new Guid("fd4535d2-7103-498e-85bd-9651778a4b72")
                        },
                        new
                        {
                            Id = new Guid("ec8f2cc8-98dc-434e-824a-a36583a49ced"),
                            Active = true,
                            CatalogMenuId = new Guid("dd84c814-812e-4a54-a7d3-ea863da1a5c8"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2269),
                            CreatedBy = "System",
                            RoleId = new Guid("fd4535d2-7103-498e-85bd-9651778a4b72")
                        },
                        new
                        {
                            Id = new Guid("ecc354ef-7d97-4a97-95be-83008055f236"),
                            Active = true,
                            CatalogMenuId = new Guid("fb439685-8613-4b10-bed0-64dfc71a433c"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2273),
                            CreatedBy = "System",
                            RoleId = new Guid("fd4535d2-7103-498e-85bd-9651778a4b72")
                        },
                        new
                        {
                            Id = new Guid("207a75d1-8968-4061-905c-54885edf0197"),
                            Active = true,
                            CatalogMenuId = new Guid("15be86da-51b5-40d8-92ee-e426a2a5df8f"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2276),
                            CreatedBy = "System",
                            RoleId = new Guid("fd4535d2-7103-498e-85bd-9651778a4b72")
                        },
                        new
                        {
                            Id = new Guid("fab62a48-c159-4880-8638-61d1d121deb7"),
                            Active = true,
                            CatalogMenuId = new Guid("38d321e1-6c32-4adf-bc6e-461061fc2b66"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2282),
                            CreatedBy = "System",
                            RoleId = new Guid("fd4535d2-7103-498e-85bd-9651778a4b72")
                        },
                        new
                        {
                            Id = new Guid("da4793b2-f08b-41d4-af2b-8e5973dd62c1"),
                            Active = true,
                            CatalogMenuId = new Guid("43c4bce9-c056-43e7-84f3-1c67877a2c70"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2383),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("b848c439-b668-4312-8052-9b698a342edd"),
                            Active = true,
                            CatalogMenuId = new Guid("2565e61d-86d4-4a72-8886-296733908e5b"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2535),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("aa9cf51d-35a5-4976-9e4d-8b1e3440a01d"),
                            Active = true,
                            CatalogMenuId = new Guid("279db491-1a2a-4043-baf5-70835351a3ca"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2542),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("1a975413-ae22-4a11-ad3a-4174dea35991"),
                            Active = true,
                            CatalogMenuId = new Guid("aebe7952-8a9d-49fa-bc6f-dc501bc89082"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2615),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("dff01add-03cb-45da-99e5-1162f73bd90d"),
                            Active = true,
                            CatalogMenuId = new Guid("655b2ad6-6c94-4a67-a3de-9cbe3501d7c0"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2618),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("783e4229-d50d-48fb-b4e3-4a0fa063564c"),
                            Active = true,
                            CatalogMenuId = new Guid("84e9e9c9-afbb-4944-9699-67cf269b91ae"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2621),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("502eed91-c4e2-4987-9f07-2ee8ac0c3410"),
                            Active = true,
                            CatalogMenuId = new Guid("749d90e3-e39c-4630-9316-71cc814ab1ee"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2625),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("c0a83538-4493-40fb-9241-59b7e58defa7"),
                            Active = true,
                            CatalogMenuId = new Guid("4fd6aa25-040a-4a58-8f3d-ea1aeff04bd6"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2628),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("c924cee4-4342-465c-b583-2f56cc65bb16"),
                            Active = true,
                            CatalogMenuId = new Guid("f3f6bde7-0c6a-4dc2-b785-674f1ca77b95"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2631),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("d9b3b27b-280c-48bc-8a22-a4c7758055f8"),
                            Active = true,
                            CatalogMenuId = new Guid("bf39e8be-8707-4a80-bf9b-a30486a6b4bb"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2639),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("48e3cc25-5f7e-4b6c-adc8-ba884800b983"),
                            Active = true,
                            CatalogMenuId = new Guid("b2e7412c-d120-4cc3-a77e-b97b3796a46f"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2643),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("4e232506-eedb-4f35-ac38-ac6c24769fba"),
                            Active = true,
                            CatalogMenuId = new Guid("f535972a-7807-4335-91ec-a82b19eea803"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2651),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("b4e0b979-8a0b-407c-be37-ee3e7a0f980c"),
                            Active = true,
                            CatalogMenuId = new Guid("8804915e-1694-486b-8fa0-5b47d0fdaa11"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2655),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("b3dc1ada-5c45-4116-9405-7a1360ed3b8e"),
                            Active = true,
                            CatalogMenuId = new Guid("90eba23b-5ccd-49b2-9e58-c86b440ae431"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2659),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("94d274be-8273-456d-82c9-09cc0a039ba1"),
                            Active = true,
                            CatalogMenuId = new Guid("15299e9a-ebc1-45e1-9a7a-293253a01f1e"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2663),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("56060cb0-2b72-4aee-8cb2-a284e00a72f2"),
                            Active = true,
                            CatalogMenuId = new Guid("b05309c0-9b19-4474-a025-b59b526f1930"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2721),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("05308713-9652-400c-be78-67248c3a26f3"),
                            Active = true,
                            CatalogMenuId = new Guid("85db29c8-6df0-481b-8065-c10f55d4050b"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2725),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("198f619c-3476-469b-aaaf-dc1a56da146d"),
                            Active = true,
                            CatalogMenuId = new Guid("abc3cd41-a3bf-4167-b7c9-c0d03cb6c84f"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2733),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("e6426a5a-d87a-4141-8cbf-312a17e9ead5"),
                            Active = true,
                            CatalogMenuId = new Guid("917f29ea-ade8-4b47-bbf4-1b13b5ea3fa8"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2737),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("a8aca147-8cd5-4e43-baa0-dee519b2c888"),
                            Active = true,
                            CatalogMenuId = new Guid("bc49bc14-4834-4b5a-a1e8-26715ae2c57e"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2741),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("31e3493a-e66f-48f2-8e51-dfe10be1c534"),
                            Active = true,
                            CatalogMenuId = new Guid("dd84c814-812e-4a54-a7d3-ea863da1a5c8"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2750),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("3fa2ff59-ac59-44da-a82f-5d73a5e35cb3"),
                            Active = true,
                            CatalogMenuId = new Guid("fb439685-8613-4b10-bed0-64dfc71a433c"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2858),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("6a6ac217-6ca5-4919-9b46-e5f9670a8c2e"),
                            Active = true,
                            CatalogMenuId = new Guid("15be86da-51b5-40d8-92ee-e426a2a5df8f"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2862),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("7433cd8a-d844-44c1-868b-93e0db2a6970"),
                            Active = true,
                            CatalogMenuId = new Guid("38d321e1-6c32-4adf-bc6e-461061fc2b66"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2865),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("462d75d5-513e-48fb-a83b-1426903a0722"),
                            Active = true,
                            CatalogMenuId = new Guid("6a9157ad-d1a8-464d-8f6f-a065a9b6c61c"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2870),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("e2e0efb7-51e2-4e8e-81df-686587f17dc0"),
                            Active = true,
                            CatalogMenuId = new Guid("02647d85-581b-4e74-acce-9adddaecf680"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2925),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("626cea29-8fc9-477e-a438-2f6fb25cbcb2"),
                            Active = true,
                            CatalogMenuId = new Guid("4c748e6e-60a6-47fd-b83a-d91fc57feb0f"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2929),
                            CreatedBy = "System",
                            RoleId = new Guid("77115b3b-ef96-4735-b0df-de871f78075b")
                        },
                        new
                        {
                            Id = new Guid("c2fceb82-e309-4905-8662-713e74f2d274"),
                            Active = true,
                            CatalogMenuId = new Guid("43c4bce9-c056-43e7-84f3-1c67877a2c70"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(2983),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("04aa051a-ce2e-483b-8ead-ad1a380cbab8"),
                            Active = true,
                            CatalogMenuId = new Guid("2565e61d-86d4-4a72-8886-296733908e5b"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3042),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("09d701f3-56f0-4704-bb0b-7e88159319eb"),
                            Active = true,
                            CatalogMenuId = new Guid("279db491-1a2a-4043-baf5-70835351a3ca"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3048),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("76ee48d8-6aa2-41c4-9e7f-803a69b5ac93"),
                            Active = true,
                            CatalogMenuId = new Guid("aebe7952-8a9d-49fa-bc6f-dc501bc89082"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3105),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("5c7f5bef-7c8f-47a0-8172-7ecd86a413a3"),
                            Active = true,
                            CatalogMenuId = new Guid("655b2ad6-6c94-4a67-a3de-9cbe3501d7c0"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3168),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("f085187d-db95-4af4-bf92-902c189d00c3"),
                            Active = true,
                            CatalogMenuId = new Guid("84e9e9c9-afbb-4944-9699-67cf269b91ae"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3171),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("8541407c-0944-4548-a760-71f4dbac0e36"),
                            Active = true,
                            CatalogMenuId = new Guid("749d90e3-e39c-4630-9316-71cc814ab1ee"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3180),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("8a267a83-aba7-469d-a9cd-97a5a1b86a06"),
                            Active = true,
                            CatalogMenuId = new Guid("4fd6aa25-040a-4a58-8f3d-ea1aeff04bd6"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3184),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("55018408-f16e-4d37-88b7-682b7279c445"),
                            Active = true,
                            CatalogMenuId = new Guid("f3f6bde7-0c6a-4dc2-b785-674f1ca77b95"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3188),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("0e2a263c-2cd0-447b-b435-5bd5a26fb07a"),
                            Active = true,
                            CatalogMenuId = new Guid("bf39e8be-8707-4a80-bf9b-a30486a6b4bb"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3191),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("7a87bbc9-9f4a-41ed-8477-7cc083378214"),
                            Active = true,
                            CatalogMenuId = new Guid("b2e7412c-d120-4cc3-a77e-b97b3796a46f"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3195),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("0487c0d5-b756-4b24-bfde-c82970924441"),
                            Active = true,
                            CatalogMenuId = new Guid("f535972a-7807-4335-91ec-a82b19eea803"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3199),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("77beca01-de59-4117-86b9-dc78e9fa2bd6"),
                            Active = true,
                            CatalogMenuId = new Guid("8804915e-1694-486b-8fa0-5b47d0fdaa11"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3202),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("24854fe2-f0f8-41cc-8fd8-a8f8a86e898b"),
                            Active = true,
                            CatalogMenuId = new Guid("90eba23b-5ccd-49b2-9e58-c86b440ae431"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3206),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("1f587f95-6891-4856-936e-cccc6f487ff0"),
                            Active = true,
                            CatalogMenuId = new Guid("15299e9a-ebc1-45e1-9a7a-293253a01f1e"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3214),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("feaef8d7-b8de-414e-a560-f5cfa556323b"),
                            Active = true,
                            CatalogMenuId = new Guid("b05309c0-9b19-4474-a025-b59b526f1930"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3270),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("5bfcbcdf-efa9-4f79-bf6c-9914c42231e3"),
                            Active = true,
                            CatalogMenuId = new Guid("85db29c8-6df0-481b-8065-c10f55d4050b"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3274),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("82033dec-9b11-4881-91e8-ec5e84de8869"),
                            Active = true,
                            CatalogMenuId = new Guid("abc3cd41-a3bf-4167-b7c9-c0d03cb6c84f"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3277),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("2ecbac56-0b3e-445c-84af-59115f45f49d"),
                            Active = true,
                            CatalogMenuId = new Guid("917f29ea-ade8-4b47-bbf4-1b13b5ea3fa8"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3281),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("e409b58c-0a1b-4384-a7e0-9b3c87612443"),
                            Active = true,
                            CatalogMenuId = new Guid("bc49bc14-4834-4b5a-a1e8-26715ae2c57e"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3285),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("b4fbfa04-1937-4cb1-9497-477b9d24661f"),
                            Active = true,
                            CatalogMenuId = new Guid("dd84c814-812e-4a54-a7d3-ea863da1a5c8"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3293),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("714643e0-4b1f-476b-a97a-066426a8de19"),
                            Active = true,
                            CatalogMenuId = new Guid("fb439685-8613-4b10-bed0-64dfc71a433c"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3343),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("64ac7f16-1025-49ea-b23e-863abf418e50"),
                            Active = true,
                            CatalogMenuId = new Guid("15be86da-51b5-40d8-92ee-e426a2a5df8f"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3351),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("7be4b62b-d817-47d0-a47b-c7094e805b56"),
                            Active = true,
                            CatalogMenuId = new Guid("38d321e1-6c32-4adf-bc6e-461061fc2b66"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3355),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("550899b0-e283-42e7-a81c-d8372811cb28"),
                            Active = true,
                            CatalogMenuId = new Guid("6a9157ad-d1a8-464d-8f6f-a065a9b6c61c"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3359),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("413e5b4c-99ba-4506-8324-e4cb072c45e8"),
                            Active = true,
                            CatalogMenuId = new Guid("02647d85-581b-4e74-acce-9adddaecf680"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3469),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        },
                        new
                        {
                            Id = new Guid("e6bfa274-1ea6-40c4-838c-99080b2f12b0"),
                            Active = true,
                            CatalogMenuId = new Guid("4c748e6e-60a6-47fd-b83a-d91fc57feb0f"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3473),
                            CreatedBy = "System",
                            RoleId = new Guid("c3b6a8a7-943b-49f8-b002-b8e197fb47f0")
                        });
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.PercentageParticipationTable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("SubsidiaryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("PercentageParticipationTable", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CatalogProjectCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogProjectStateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogProjectTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("date");

                    b.Property<decimal>("CostHourMenCustomer")
                        .HasColumnType("money");

                    b.Property<decimal>("CostHourMenProject")
                        .HasColumnType("money");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CustomerId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("DurationHour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MainContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CustomerId" }, "IX_Project_CustomerId");

                    b.ToTable("Project", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.ProjectHourBank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HourBankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HourBankId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectHourBank", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.ProjectManager", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectManager", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.ProjectReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CustomerApproved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CustomerApprovedDate")
                        .HasColumnType("date");

                    b.Property<string>("InvoiceComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Invoiced")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InvoicedDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("date");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ProjectReportDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("RealInvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectReport", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.ProjectReportDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FinancialParticipationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .HasColumnType("varchar(164)");

                    b.Property<Guid>("ProjectReportId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FinancialParticipationId");

                    b.HasIndex("ProjectReportId");

                    b.HasIndex("TaskActivityId")
                        .IsUnique();

                    b.ToTable("ProjectReportDetail", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.ProjectResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("CalculateFactorEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal>("CalculateFactorProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((1))");

                    b.Property<Guid?>("CatalogEmployeeRolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ParticipationValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValueSql("((0))");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex(new[] { "ProjectId" }, "IX_ProjectResource_ProjectId");

                    b.ToTable("ProjectResource", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.ProjectTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CatalogTaskStateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogTaskTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("DurationHour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("Progress")
                        .HasColumnType("int");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectTask", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Rule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Formula")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid?>("SubsidiaryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SubsidiaryId");

                    b.ToTable("Rules");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Subsidiary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid?>("CatalogRegionCityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogRegionCountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogRegionStateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("NumberId")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("PctPartIndrctCommissions")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Subsidiary", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("8d5f7b87-f06f-4168-b67e-cbb897f0f1c5"),
                            Active = true,
                            Address = "Address",
                            CatalogRegionCityId = new Guid("9e07bed6-eee4-4fd6-afc1-bcb13b0ea7cc"),
                            CatalogRegionCountryId = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            CatalogRegionStateId = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            CatalogTypeId = new Guid("22874dde-3ef1-4875-bc02-88c7863444f1"),
                            CompanyId = new Guid("f20971a2-2b7b-46df-b8ff-2964e5e8d37b"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(3986),
                            CreatedBy = "System",
                            Name = "Giga Ecuador",
                            NumberId = "123456789",
                            PctPartIndrctCommissions = 0m
                        },
                        new
                        {
                            Id = new Guid("6ea91b88-a679-4864-bc0c-853e2c92c91e"),
                            Active = true,
                            Address = "Address",
                            CatalogRegionCityId = new Guid("9e07bed6-eee4-4fd6-afc1-bcb13b0ea7cc"),
                            CatalogRegionCountryId = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            CatalogRegionStateId = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            CatalogTypeId = new Guid("22874dde-3ef1-4875-bc02-88c7863444f1"),
                            CompanyId = new Guid("f20971a2-2b7b-46df-b8ff-2964e5e8d37b"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(4004),
                            CreatedBy = "System",
                            Name = "Giga Colombia",
                            NumberId = "123456789",
                            PctPartIndrctCommissions = 0m
                        },
                        new
                        {
                            Id = new Guid("0a206aab-bc50-4683-be7b-f6adf4ad1209"),
                            Active = true,
                            Address = "Address",
                            CatalogRegionCityId = new Guid("9e07bed6-eee4-4fd6-afc1-bcb13b0ea7cc"),
                            CatalogRegionCountryId = new Guid("f504e9d9-edd3-475f-8452-e5fc899fa033"),
                            CatalogRegionStateId = new Guid("5afe07a2-fd5e-478c-93ad-cc6c8aee7e8e"),
                            CatalogTypeId = new Guid("22874dde-3ef1-4875-bc02-88c7863444f1"),
                            CompanyId = new Guid("f20971a2-2b7b-46df-b8ff-2964e5e8d37b"),
                            Created = new DateTime(2022, 6, 28, 3, 20, 58, 533, DateTimeKind.Utc).AddTicks(4015),
                            CreatedBy = "System",
                            Name = "Giga El Salvador",
                            NumberId = "123456789",
                            PctPartIndrctCommissions = 0m
                        });
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.TaskActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnOrder(0)
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal?>("CalculateFactor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("CommissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ExchangeRate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("HourCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("InProjectReport")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InProjectReportDate")
                        .HasColumnType("date");

                    b.Property<bool>("Invoiced")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("InvoicedDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsBillable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PaidDate")
                        .HasColumnType("date");

                    b.Property<Guid>("ProjectTaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalTimeHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalTimeHourApproved")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex(new[] { "ProjectTaskId" }, "IX_TaskActivity_ProjectTaskId");

                    b.ToTable("TaskActivity", (string)null);
                });

            modelBuilder.Entity("Kameyo.Infrastructure.Identity.Entities.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("IdentityRoles", (string)null);
                });

            modelBuilder.Entity("Kameyo.Infrastructure.Identity.Entities.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PersonTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("IdentityUsers", (string)null);
                });

            modelBuilder.Entity("Kameyo.Infrastructure.Identity.Entities.ApplicationUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("IdentityUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ApplicationRoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationRoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("IdentityRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("IdentityUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("IdentityUserTokens", (string)null);
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Contact", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Customer", "Customer")
                        .WithMany("Contacts")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Contact_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Customer", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Subsidiary", "Subsidiary")
                        .WithMany("Customers")
                        .HasForeignKey("SubsidiaryId")
                        .HasConstraintName("FK_Customer_Subsidiary");

                    b.Navigation("Subsidiary");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Employee", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Subsidiary", "Subsidiary")
                        .WithMany("Employees")
                        .HasForeignKey("SubsidiaryId")
                        .IsRequired()
                        .HasConstraintName("FK_Employee_Subsidiary");

                    b.Navigation("Subsidiary");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.EmployeeAward", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Employee", "Employee")
                        .WithMany("EmployeeAwards")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeAward_Employee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.EmployeeCertification", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Employee", "Employee")
                        .WithMany("EmployeeCertifications")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeCertification_Employee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.EmployeeExperience", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Employee", "Employee")
                        .WithMany("EmployeeExperiences")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeExperience_Employee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.EmployeeSkillAbility", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Employee", "Employee")
                        .WithMany("EmployeeSkillAbilities")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeSkillAbility_Employee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.EmployeeStudy", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Employee", "Employee")
                        .WithMany("EmployeeStudies")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_EmployeeStudy_Employee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.FinancialParticipation", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Employee", "Employee")
                        .WithMany("FinancialParticipations")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_FinancialParticipation_Employee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.HourBank", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Customer", "Customer")
                        .WithMany("HourBanks")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_HourBank_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.MenuRole", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Catalog", "CatalogMenu")
                        .WithMany()
                        .HasForeignKey("CatalogMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CatalogMenu");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Project", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Customer", "Customer")
                        .WithMany("Projects")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_Project_Customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.ProjectHourBank", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.HourBank", "HourBank")
                        .WithMany()
                        .HasForeignKey("HourBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kameyo.Core.Domain.Entities.Project", "Project")
                        .WithMany("ProjectHourBanks")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectHourBank_Project");

                    b.Navigation("HourBank");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.ProjectManager", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Employee", "Employee")
                        .WithMany("ProjectManagers")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectManager_Employee");

                    b.HasOne("Kameyo.Core.Domain.Entities.Project", "Project")
                        .WithMany("ProjectManagers")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectManager_Project");

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.ProjectReport", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Project", "Project")
                        .WithMany("ProjectReports")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectReport_Project");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.ProjectReportDetail", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.FinancialParticipation", "FinancialParticipation")
                        .WithMany()
                        .HasForeignKey("FinancialParticipationId");

                    b.HasOne("Kameyo.Core.Domain.Entities.ProjectReport", "ProjectReport")
                        .WithMany("ProjectReportDetails")
                        .HasForeignKey("ProjectReportId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectReportDetail_ProjectReport");

                    b.HasOne("Kameyo.Core.Domain.Entities.TaskActivity", "TaskActivity")
                        .WithOne("ProjectReportDetails")
                        .HasForeignKey("Kameyo.Core.Domain.Entities.ProjectReportDetail", "TaskActivityId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectReportDetail_TaskActivity");

                    b.Navigation("FinancialParticipation");

                    b.Navigation("ProjectReport");

                    b.Navigation("TaskActivity");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.ProjectResource", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kameyo.Core.Domain.Entities.Project", "Project")
                        .WithMany("ProjectResources")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectResource_Project");

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.ProjectTask", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Project", "Project")
                        .WithMany("ProjectTasks")
                        .HasForeignKey("ProjectId")
                        .IsRequired()
                        .HasConstraintName("FK_ProjectTask_Project");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Rule", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Subsidiary", "Subsidiary")
                        .WithMany("Rules")
                        .HasForeignKey("SubsidiaryId")
                        .HasConstraintName("FK_Rules_Subsidiary");

                    b.Navigation("Subsidiary");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Subsidiary", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Company", "Company")
                        .WithMany("Subsidiaries")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_Subsidiary_Company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.TaskActivity", b =>
                {
                    b.HasOne("Kameyo.Core.Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kameyo.Core.Domain.Entities.ProjectTask", "ProjectTask")
                        .WithMany("TaskActivities")
                        .HasForeignKey("ProjectTaskId")
                        .IsRequired()
                        .HasConstraintName("FK_TaskActivity_ProjectTask");

                    b.Navigation("Employee");

                    b.Navigation("ProjectTask");
                });

            modelBuilder.Entity("Kameyo.Infrastructure.Identity.Entities.ApplicationUserRole", b =>
                {
                    b.HasOne("Kameyo.Infrastructure.Identity.Entities.ApplicationRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kameyo.Infrastructure.Identity.Entities.ApplicationUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Kameyo.Infrastructure.Identity.Entities.ApplicationRole", null)
                        .WithMany("RoleClaims")
                        .HasForeignKey("ApplicationRoleId");

                    b.HasOne("Kameyo.Infrastructure.Identity.Entities.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Kameyo.Infrastructure.Identity.Entities.ApplicationUser", null)
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Kameyo.Infrastructure.Identity.Entities.ApplicationUser", null)
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Kameyo.Infrastructure.Identity.Entities.ApplicationUser", null)
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Company", b =>
                {
                    b.Navigation("Subsidiaries");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("HourBanks");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Employee", b =>
                {
                    b.Navigation("EmployeeAwards");

                    b.Navigation("EmployeeCertifications");

                    b.Navigation("EmployeeExperiences");

                    b.Navigation("EmployeeSkillAbilities");

                    b.Navigation("EmployeeStudies");

                    b.Navigation("FinancialParticipations");

                    b.Navigation("ProjectManagers");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Project", b =>
                {
                    b.Navigation("ProjectHourBanks");

                    b.Navigation("ProjectManagers");

                    b.Navigation("ProjectReports");

                    b.Navigation("ProjectResources");

                    b.Navigation("ProjectTasks");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.ProjectReport", b =>
                {
                    b.Navigation("ProjectReportDetails");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.ProjectTask", b =>
                {
                    b.Navigation("TaskActivities");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.Subsidiary", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Employees");

                    b.Navigation("Rules");
                });

            modelBuilder.Entity("Kameyo.Core.Domain.Entities.TaskActivity", b =>
                {
                    b.Navigation("ProjectReportDetails")
                        .IsRequired();
                });

            modelBuilder.Entity("Kameyo.Infrastructure.Identity.Entities.ApplicationRole", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Kameyo.Infrastructure.Identity.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("Tokens");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
